{
  "artifacts": [],
  "command": "run",
  "experiment": {
    "base_dir": "d:\\PROGRAMMING\\Kaggle\\Binary Classification with a Bank Churn Dataset",
    "dependencies": [
      "catboost==1.2.5",
      "ipython==8.12.0",
      "numpy==1.24.3",
      "pandas==2.0.3",
      "sacred==0.8.5",
      "scikit-learn==1.3.0"
    ],
    "mainfile": null,
    "name": "config",
    "repositories": [],
    "sources": []
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"d:\\Anaconda3\\Lib\\site-packages\\sacred\\config\\captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^\n",
    "  File \"C:\\Users\\ghsqj\\AppData\\Local\\Temp\\ipykernel_32880\\4286136845.py\", line 11, in run\n    model.fit(X_train, y_train)\n",
    "  File \"d:\\Anaconda3\\Lib\\site-packages\\catboost\\core.py\", line 5220, in fit\n    self._fit(X, y, cat_features, text_features, embedding_features, None, sample_weight, None, None, None, None, baseline, use_best_model,\n",
    "  File \"d:\\Anaconda3\\Lib\\site-packages\\catboost\\core.py\", line 2385, in _fit\n    train_params = self._prepare_train_params(\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
    "  File \"d:\\Anaconda3\\Lib\\site-packages\\catboost\\core.py\", line 2265, in _prepare_train_params\n    train_pool = _build_train_pool(X, y, cat_features, text_features, embedding_features, pairs,\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
    "  File \"d:\\Anaconda3\\Lib\\site-packages\\catboost\\core.py\", line 1503, in _build_train_pool\n    train_pool = Pool(X, y, cat_features=cat_features, text_features=text_features, embedding_features=embedding_features, pairs=pairs, weight=sample_weight, group_id=group_id,\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
    "  File \"d:\\Anaconda3\\Lib\\site-packages\\catboost\\core.py\", line 848, in __init__\n    self._init(data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, weight,\n",
    "  File \"d:\\Anaconda3\\Lib\\site-packages\\catboost\\core.py\", line 1481, in _init\n    self._init_pool(data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, weight,\n",
    "  File \"_catboost.pyx\", line 4159, in _catboost._PoolBase._init_pool\n",
    "  File \"_catboost.pyx\", line 4209, in _catboost._PoolBase._init_pool\n",
    "  File \"_catboost.pyx\", line 4025, in _catboost._PoolBase._init_features_order_layout_pool\n",
    "  File \"_catboost.pyx\", line 2919, in _catboost._set_features_order_data_pd_data_frame\n",
    "_catboost.CatBoostError: features data: pandas.DataFrame column 'Geography' has dtype 'category' but is not in  cat_features list\n"
  ],
  "heartbeat": "2024-06-02T12:15:16.266463",
  "host": {
    "ENV": {},
    "cpu": "AMD Ryzen 7 5700X 8-Core Processor",
    "gpus": {
      "driver_version": "546.01",
      "gpus": [
        {
          "model": "NVIDIA GeForce RTX 3060 Ti",
          "persistence_mode": false,
          "total_memory": 8192
        }
      ]
    },
    "hostname": "DESKTOP-8MU8HDS",
    "os": [
      "Windows",
      "Windows-10-10.0.22631-SP0"
    ],
    "python_version": "3.11.5"
  },
  "meta": {
    "command": "run",
    "named_configs": [],
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--id": null,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2024-06-02T12:15:16.134448",
  "status": "FAILED",
  "stop_time": "2024-06-02T12:15:16.267463"
}